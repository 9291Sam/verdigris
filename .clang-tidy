Checks: >
  *,
  -llvmlibc-*,
  -modernize-use-trailing-return-type,
  -altera-unroll-loops,
  -fuchsia-default-arguments-calls,
  -llvm-else-after-return,
  -readability-else-after-return,
  -fuchsia-default-arguments-declarations,
  -altera-id-dependent-backward-branch,
  -altera-struct-pack-align,
  -readability-redundant-access-specifiers,
  -google-readability-todo,
  -hicpp-uppercase-literal-suffix,
  -readability-uppercase-literal-suffix,
  -fuchsia-overloaded-operator,
  -readability-identifier-length,
  -modernize-use-auto,
  -misc-non-private-member-variables-in-classes,
  -cppcoreguidelines-non-private-member-variables-in-classes,
  -hicpp-special-member-functions,
  -readability-named-parameter,
  -hicpp-named-parameter

# CheckOptions:
#   - key: misc-non-private-member-variables-in-classes.IgnoreClassesWithAllMemberVariablesBeingPublic
#     value: true


CheckOptions:
  - key: cppcoreguidelines-special-member-functions.AllowSoleDefaultDtor
    value: true


# misc-non-private-member-variables-in-classes
# IgnoreClassesWithAllMemberVariablesBeingPublic
  
# WarningsAsErrors: "*"

# CheckOptions:
#   - { key: readability-identifier-naming.NamespaceCase,          value: camelBack }
#   - { key: readability-identifier-naming.ClassCase,              value: CamelCase  }
#   - { key: readability-identifier-naming.StructCase,             value: CamelCase  }
#   - { key: readability-identifier-naming.TemplateParameterCase,  value: CamelCase  }
#   - { key: readability-identifier-naming.FunctionCase,           value: camelBack  }
#   - { key: readability-identifier-naming.VariableCase,           value: camelBack, lower_case }
#   - { key: readability-identifier-naming.PrivateMemberSuffix,    value:          }
#   - { key: readability-identifier-naming.ProtectedMemberSuffix,  value:          }
#   - { key: readability-identifier-naming.MacroDefinitionCase,    value: UPPER_CASE }
#   - { key: readability-identifier-naming.EnumConstantCase,         value: CamelCase }
#   - { key: readability-identifier-naming.EnumConstantPrefix,       value:          }
#   - { key: readability-identifier-naming.ConstexprVariableCase,    value: CamelCase }
#   - { key: readability-identifier-naming.ConstexprVariablePrefix,  value:          }
#   - { key: readability-identifier-naming.GlobalConstantCase,       value: CamelCase }
#   - { key: readability-identifier-naming.GlobalConstantPrefix,     value: k         }
#   - { key: readability-identifier-naming.MemberConstantCase,       value: CamelCase }
#   - { key: readability-identifier-naming.MemberConstantPrefix,     value: k         }
#   - { key: readability-identifier-naming.StaticConstantCase,       value: CamelCase }
#   - { key: readability-identifier-naming.StaticConstantPrefix,     value: k         }